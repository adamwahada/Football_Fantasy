# Application Info
spring.application.name=fantasy
server.port=9090
server.servlet.context-path=/fantasy
spring.jpa.properties.hibernate.jdbc.time_zone=UTC


# Database (using environment variables)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# Keycloak configuration for the filter
keycloak.auth-server-url=${KEYCLOAK_SERVER_URL}
keycloak.realm=${KEYCLOAK_REALM}
keycloak.resource=angular-client

# IMPORTANT: Add these missing properties for your filter
keycloak.backend.client-id=${KEYCLOAK_CLIENT_ID}
keycloak.backend.client-secret=${KEYCLOAK_CLIENT_SECRET}

# Keycloak (OAuth2 Resource Server for protecting APIs)
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_REALM}

# Keycloak custom backend client (for registration, etc.)
keycloak.backend.realm=${KEYCLOAK_REALM}
keycloak.backend.server-url=${KEYCLOAK_SERVER_URL}
keycloak.backend.admin.username=${KEYCLOAK_ADMIN}
keycloak.backend.admin.password=${KEYCLOAK_ADMIN_PASSWORD}

# Google reCAPTCHA Secret
recaptcha.secret-key=${RECAPTCHA_SECRET_KEY}

# Swagger OAuth2 configuration (optional, for testing)
springdoc.swagger-ui.oauth.client-id=${KEYCLOAK_CLIENT_ID}
springdoc.swagger-ui.oauth.client-secret=${KEYCLOAK_CLIENT_SECRET}
springdoc.swagger-ui.oauth.realm=${KEYCLOAK_REALM}
springdoc.swagger-ui.oauth.auth-url=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
springdoc.swagger-ui.oauth.token-url=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token

logging:
level:
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web.cors=INFO
logging.level.FootballFantasy.fantasy=INFO
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=OFF
# Enable static resource handling
spring.web.resources.static-locations=classpath:/static/

# Set cache period for static resources (optional, for performance)
spring.web.resources.cache.period=3600

# Enable resource chain (optional, for optimization)
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/**
