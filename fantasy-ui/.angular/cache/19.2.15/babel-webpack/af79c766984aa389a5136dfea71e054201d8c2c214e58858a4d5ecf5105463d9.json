{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  http;\n  baseUrl = 'http://localhost:9090/fantasy/api';\n  constructor(http) {\n    this.http = http;\n  }\n  // Endpoint for users with 'user' role\n  getUserData() {\n    console.log('=== Calling User Endpoint ===');\n    const url = `${this.baseUrl}/test`;\n    console.log('URL:', url);\n    return this.http.get(url, {\n      responseType: 'text'\n    }).pipe(tap(response => {\n      console.log('=== User Data Response ===');\n      console.log('Response:', response);\n    }), catchError(error => {\n      console.error('=== User Data Error ===');\n      console.error('Status:', error.status);\n      console.error('Message:', error.message);\n      console.error('Error:', error);\n      return throwError(() => error);\n    }));\n  }\n  // Endpoint for users with 'admin' role\n  getAdminData() {\n    console.log('=== Calling Admin Endpoint ===');\n    const url = `${this.baseUrl}/test3`;\n    console.log('URL:', url);\n    return this.http.get(url, {\n      responseType: 'text'\n    }).pipe(tap(response => {\n      console.log('=== Admin Data Response ===');\n      console.log('Response:', response);\n    }), catchError(error => {\n      console.error('=== Admin Data Error ===');\n      console.error('Status:', error.status);\n      console.error('Message:', error.message);\n      console.error('Error:', error);\n      return throwError(() => error);\n    }));\n  }\n  static ɵfac = function ApiService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["throwError","catchError","tap","ApiService","http","baseUrl","constructor","getUserData","console","log","url","get","responseType","pipe","response","error","status","message","getAdminData","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\adamw\\Football_Auth_Template\\fantasy-ui\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private baseUrl = 'http://localhost:9090/fantasy/api';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Endpoint for users with 'user' role\r\n  getUserData(): Observable<any> {\r\n    console.log('=== Calling User Endpoint ===');\r\n    const url = `${this.baseUrl}/test`;\r\n    console.log('URL:', url);\r\n\r\n    return this.http.get(url, { responseType: 'text' }).pipe(\r\n      tap(response => {\r\n        console.log('=== User Data Response ===');\r\n        console.log('Response:', response);\r\n      }),\r\n      catchError(error => {\r\n        console.error('=== User Data Error ===');\r\n        console.error('Status:', error.status);\r\n        console.error('Message:', error.message);\r\n        console.error('Error:', error);\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n\r\n  // Endpoint for users with 'admin' role\r\n  getAdminData(): Observable<any> {\r\n    console.log('=== Calling Admin Endpoint ===');\r\n    const url = `${this.baseUrl}/test3`;\r\n    console.log('URL:', url);\r\n\r\n    return this.http.get(url, { responseType: 'text' }).pipe(\r\n      tap(response => {\r\n        console.log('=== Admin Data Response ===');\r\n        console.log('Response:', response);\r\n      }),\r\n      catchError(error => {\r\n        console.error('=== Admin Data Error ===');\r\n        console.error('Status:', error.status);\r\n        console.error('Message:', error.message);\r\n        console.error('Error:', error);\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n}"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;;;AAKhD,OAAM,MAAOC,UAAU;EAGDC,IAAA;EAFZC,OAAO,GAAG,mCAAmC;EAErDC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC;EACAG,WAAWA,CAAA;IACTC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,OAAO;IAClCG,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEC,GAAG,CAAC;IAExB,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAACD,GAAG,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,IAAI,CACtDX,GAAG,CAACY,QAAQ,IAAG;MACbN,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEK,QAAQ,CAAC;IACpC,CAAC,CAAC,EACFb,UAAU,CAACc,KAAK,IAAG;MACjBP,OAAO,CAACO,KAAK,CAAC,yBAAyB,CAAC;MACxCP,OAAO,CAACO,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACC,MAAM,CAAC;MACtCR,OAAO,CAACO,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxCT,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,OAAOf,UAAU,CAAC,MAAMe,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAEA;EACAG,YAAYA,CAAA;IACVV,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,QAAQ;IACnCG,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEC,GAAG,CAAC;IAExB,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAACD,GAAG,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,IAAI,CACtDX,GAAG,CAACY,QAAQ,IAAG;MACbN,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEK,QAAQ,CAAC;IACpC,CAAC,CAAC,EACFb,UAAU,CAACc,KAAK,IAAG;MACjBP,OAAO,CAACO,KAAK,CAAC,0BAA0B,CAAC;MACzCP,OAAO,CAACO,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACC,MAAM,CAAC;MACtCR,OAAO,CAACO,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxCT,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,OAAOf,UAAU,CAAC,MAAMe,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;;qCA7CWZ,UAAU,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAVnB,UAAU;IAAAoB,OAAA,EAAVpB,UAAU,CAAAqB,IAAA;IAAAC,UAAA,EAFT;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}